#! /bin/bash

#read -p "enter the number of columns to your table : " column_num


#function to take the column meta data 

function column_meta_data (){

	#loop to take values for specific number of columns & set the flag to "1"
	column_name=$1
	flag="1"
	meta=""
for (( count=1 ; count<=$1 ; count++ ))
	do
	read_c_name $column_name && read_c_datatype $column_name && read_pk $column_name ||return $?
	done
	
		if [[ $flag = "0" ]] ; then
	echo "you entered the data sucsessfully"
	echo "$meta" >> $2
	else
	echo "u didnt enter primary key"
	return 111
	fi 
	
	}
	########################################################################
	
	# read the column name
	
function read_c_name (){	
								
	read -p "enter your '$count' column name : " column_name 
	[ -n "$column_name" ] && meta+="$column_name," || { echo "column name can't be null"; return 123; }
	}
	
	########################################################################	
	
	# read the column data type
	
function read_c_datatype (){

	read -p "enter your '$count' column data_type :
		i_ for integer 
		t_ for text 
		d_ for date: " column_type
	if [[ $column_type = "i" ]] ; then
		meta+=int,
		elif [[ $column_type = "t" ]] ; then
		meta+=text,
		elif [[ $column_type = "d" ]] ; then
		meta+=date,
		else
		echo "u didn't enter a right datatype"
		return 105
	fi
	}
	
	#########################################################################
	
	# read if the column is primary key
	
function read_pk (){	
	
	if [[ $flag = "1" ]] ; then
	
	read -p "enter p if your column is primary key  : " pk 
	
		if [[ $pk = "p" ]] ; then

			flag="0"
			meta+=pk:
		
			else
			meta+="null:"
		fi
	else	
	meta+="null:"
	
	fi

	#echo $meta
	}
	###########################################################################
	
#	column_meta_data $column_num

