where_fn() {
    : '
    $1 is the column we want to apply where clause to
    $2 is the condition in case of int,Date  valued column  and flags in case of string valued columns
    $3 is the input to the condition or string we want to search for  
    global variables :
        COLUMN_INFO
    '
    case ${COLUMN_INFO[1]} in
        "int")
            chk_datatype ${COLUMN_INFO[1]} ${@: -1} && IntWhereOperation "$@" ||return $?
        ;;
        "date")
            chk_datatype ${COLUMN_INFO[1]} ${@: -1} && DateWhereOperation "$@" ||return $?
        ;;
        "text")
            chk_datatype ${COLUMN_INFO[1]} ${@: -1} && TextWhereOperation "$@" ||return $?
        ;;
        *)
            allrows
    esac

}

DateWhereOperation() {
    load_column $1 \
        | sed -e "s/$/ $2 $3/" -e "s/-//g" | bc \
        | grep -n '1$' |cut -d: -f 1 
}
TextWhereOperation() {
    load_column $1 \
        | grep -n "${@:2}" \
        | cut -d: -f 1 
}
IntWhereOperation() {
    load_column $1 \
        | sed -e "s/$/ $2 $3/" | bc \
        | grep -n '1$' |cut -d: -f 1 
}
allrows() {
   tail -n +2 $TABLE | awk '{print NR}'
}


increment_fn() {
    : '
    this function takes inputs as stdinput or normal int inputs 
    and outputs a multiline output of incremented numbers
    to use with the output of where clause (where_fn)
    '
    if [ -p /dev/stdin ];then
        tee | sed "s/$/+1/"  | bc
    else
        echo -en $@| tr " " "\n" | sed "s/$/+1/"  | bc
    fi
}

where_menu() {
    echo "which column u want to apply where clause upon"
    echo -e "${MAGENTA}input enter or invalid column number to skip where clause${ENDCOLOR}"
    custom_read -p ">>" || return $?
    if [ -z "$readout" ];then
        return 0
    elif ( [[ $readout =~ ^[1-9]+[0-9]*$ ]] && [ $readout -le $(get_max_columns_no  $METADATA  ) ] ); then
        echo 1
        COLUMN_NO=$readout
    elif [[ $readout =~ ^[_a-z] ]];then
        echo 2
        COLUMN_NO=$(echo -n "$METADATA" | Get_column_number_from_name $readout)
    else
        echo -e "${RED}Please enter a correct input${ENDCOLOR}"
        return 555

    fi
    if [ -n "$COLUMN_NO" ];then
        declare -ga COLUMN_INFO=($( load_column_info $METADATA $COLUMN_NO ))
        case ${COLUMN_INFO[1]} in
            date|int)
                show_menu "select the condition u want to apply" "\">\" greater than" \
                    "\"<\" less than" "\"==\" equal" "\">=\" greater than or equal"\
                    "\"<=\" less than or equal"
                    custom_read -p ">>" || return $?
                    case $readout in
                        1)
                            CONDITION=">"
                        ;;
                        2)
                            CONDITION="<"
                        ;;
                        3)
                            CONDITION="=="
                        ;;
                        4)
                            CONDITION=">="
                        ;;
                        5)
                            CONDITION="<="
                        ;;
                        *)
                            echo -e "${RED}Please enter a correct menu input${ENDCOLOR}"
                            return 79
                        ;;
                    esac
            ;;
            "text")
                show_menu "select the condition u want to apply" "exact match" "fuzzy match" \
                    "exact match and case incensitive" "fuzzy match and case incensitive"\
                    "exact invert match" "fuzzy invert match" \
                    "exact invert match and case incensitive" "fuzzy invert match and case incensitive"
                    custom_read -p ">>"
                    case $readout in
                        1)
                            CONDITION="-x"
                        ;;
                        2)
                            CONDITION="-e"
                        ;;
                        3)
                            CONDITION="-ix"
                        ;;
                        4)
                            CONDITION="-ie"
                        ;;
                        5)
                            CONDITION="-vx"
                        ;;
                        6)
                            CONDITION="-ve"
                        ;;
                        7)
                            CONDITION="-vix"
                        ;;
                        8)
                            CONDITION="-vie"
                        ;;
                        *)
                            echo -e "${RED}Please enter a correct menu input${ENDCOLOR}"
                            return 79
                        ;;
                    esac

            ;;
            *)
                echo -e "${RED}Table datatype header is faulty${ENDCOLOR}"
            ;;
        esac
    custom_read -p "insert the input of the condition " ||return $?
    INPUT=$readout
    return 0
    fi
}